/* eslint-disable */
/* prettier-ignore */
import React from "react";

const SvgIcoAccordion = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16" width="1em" height="1em" {...props}><mask id="a" width="16" height="16" x="0" y="0" maskUnits="userSpaceOnUse" style={{ maskType: 'alpha' }}><path fill="currentColor" d="M2.054 5.055a.867.867 0 0 1 1.225 0L8 9.775l4.721-4.72a.867.867 0 0 1 1.226 1.225l-5.333 5.334a.867.867 0 0 1-1.226 0L2.054 6.28a.867.867 0 0 1 0-1.225"/></mask><g mask="url(#a)"><path fill="currentColor" d="M0 0h16v16H0z"/></g></svg>); };
const SvgIcoCarouselNext = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 26 26" width="1em" height="1em" {...props}><path fill="currentColor" d="M8.213 3.336c-.55.55-.55 1.442 0 1.992l7.671 7.67-7.67 7.672a1.408 1.408 0 0 0 1.99 1.991l8.668-8.666c.55-.55.55-1.442 0-1.992l-8.667-8.667a1.41 1.41 0 0 0-1.992 0"/></svg>); };
const SvgIcoCarouselPrev = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 26 26" width="1em" height="1em" {...props}><path fill="currentColor" d="M17.787 3.336c.55.55.55 1.442 0 1.992l-7.671 7.67 7.67 7.672a1.409 1.409 0 0 1-1.99 1.991l-8.668-8.666a1.41 1.41 0 0 1 0-1.992l8.667-8.667c.55-.55 1.442-.55 1.992 0"/></svg>); };
const SvgIcoCheck = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16" width="1em" height="1em" {...props}><path fill="currentColor" d="M13.113 4.387a.867.867 0 0 1 0 1.226l-6 6a.867.867 0 0 1-1.225 0l-3-3a.867.867 0 1 1 1.225-1.226L6.5 9.774l5.387-5.387a.867.867 0 0 1 1.226 0"/></svg>); };
const SvgIcoClose = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 32 32" width="1em" height="1em" {...props}><path fill="currentColor" fillRule="evenodd" d="M5.529 5.529c.26-.26.682-.26.942 0L16 15.057l9.529-9.528a.667.667 0 1 1 .942.942L16.943 16l9.528 9.529a.667.667 0 1 1-.943.942L16 16.943 6.47 26.47a.667.667 0 0 1-.942-.942L15.057 16 5.53 6.471a.667.667 0 0 1 0-.942" clipRule="evenodd"/></svg>); };
const SvgIcoEllipsisChevron = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" width="1em" height="1em" {...props}><path fill="currentColor" fillOpacity=".88" d="M7.387 4.052a.75.75 0 0 0 0 1.06L12.273 10l-4.886 4.886a.75.75 0 0 0 1.06 1.06l5.417-5.416a.75.75 0 0 0 0-1.06L8.447 4.051a.75.75 0 0 0-1.06 0"/></svg>); };
const SvgIcoIndeterminate = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 2" width="1em" height="1em" {...props}><path fill="currentColor" fillRule="evenodd" d="M.133 1C.133.521.521.133 1 .133h8a.867.867 0 1 1 0 1.734H1A.867.867 0 0 1 .133 1" clipRule="evenodd"/></svg>); };
const SvgIcoInputReset = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" width="1em" height="1em" {...props}><mask id="a" width="20" height="20" x="0" y="0" maskUnits="userSpaceOnUse" style={{ maskType: 'alpha' }}><path fill="currentColor" fillRule="evenodd" d="M1.75 10a8.25 8.25 0 1 1 16.5 0 8.25 8.25 0 0 1-16.5 0m5.333-3.977-1.06 1.06L8.939 10l-2.916 2.917 1.06 1.06L10 11.061l2.917 2.916 1.06-1.06L11.061 10l2.916-2.917-1.06-1.06L10 8.939z" clipRule="evenodd"/></mask><g mask="url(#a)"><path fill="currentColor" fillOpacity=".28" d="M0 0h20v20H0z"/></g></svg>); };
const SvgIcoSearchDefault = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" width="1em" height="1em" {...props}><path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.667" d="M4.167 9.287a5.12 5.12 0 1 1 10.24-.001 5.12 5.12 0 0 1-10.24.001" className="stroke" clipRule="evenodd"/><path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.667" d="m12.908 12.908 2.926 2.926" className="stroke"/></svg>); };
const SvgIcoSearch = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 32 32" width="1em" height="1em" {...props}><path fill="currentColor" d="m18.776 17.89 7.494 7.495a.667.667 0 1 1-.943.943l-7.494-7.495z"/><path fill="currentColor" fillRule="evenodd" d="M13.333 20a6.667 6.667 0 1 0 0-13.333 6.667 6.667 0 0 0 0 13.333m0 1.333a8 8 0 1 0 0-16 8 8 0 0 0 0 16" clipRule="evenodd"/></svg>); };
const SvgIcoSelectboxArrow = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16" width="1em" height="1em" {...props}><path fill="currentColor" d="M2.909 5.576a.6.6 0 0 1 .848 0L8 9.818l4.242-4.242a.6.6 0 0 1 .849.848l-4.667 4.667a.6.6 0 0 1-.848 0L2.909 6.424a.6.6 0 0 1 0-.848"/></svg>); };
const SvgIcoSortDownElement = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 12" width="1em" height="1em" {...props}><path fill="currentColor" d="M5.707 11.293a1 1 0 0 1-1.414 0L1.28 8.28A.75.75 0 0 1 1.81 7h6.38a.75.75 0 0 1 .53 1.28z" className="inactive"/><path fill="currentColor" fillOpacity=".16" d="M4.293.707a1 1 0 0 1 1.414 0L8.72 3.72A.75.75 0 0 1 8.19 5H1.81a.75.75 0 0 1-.53-1.28z" className="active"/></svg>); };
const SvgIcoSortNormalElement = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 12" width="1em" height="1em" {...props}><path fill="currentColor" fillOpacity=".16" d="M5.707.707a1 1 0 0 0-1.414 0L1.28 3.72A.75.75 0 0 0 1.81 5h6.38a.75.75 0 0 0 .53-1.28zM4.293 11.293a1 1 0 0 0 1.414 0L8.72 8.28A.75.75 0 0 0 8.19 7H1.81a.75.75 0 0 0-.53 1.28z" className="inactive"/></svg>); };
const SvgIcoSortUpElement = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 12" width="1em" height="1em" {...props}><path fill="currentColor" fillOpacity=".16" d="M5.707 11.293a1 1 0 0 1-1.414 0L1.28 8.28A.75.75 0 0 1 1.81 7h6.38a.75.75 0 0 1 .53 1.28z" className="active"/><path fill="currentColor" d="M4.293.707a1 1 0 0 1 1.414 0L8.72 3.72A.75.75 0 0 1 8.19 5H1.81a.75.75 0 0 1-.53-1.28z" className="inactive"/></svg>); };
const SvgIcoTooltipArrow = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="1em" height="1em" {...props}><path d="M5.317 2.367c1.105-2.212 4.26-2.212 5.366 0L16 13H0z"/></svg>); };
const SvgKeyboardArrowDown2 = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 12" width="1em" height="1em" {...props}><path stroke="currentColor" strokeWidth="2" d="M15.86 1.999 9 8.859l-6.86-6.86"/></svg>); };
const SvgKeyboardArrowUp2 = (props: React.SVGAttributes<SVGSVGElement> & { title?: string; description?: string; } = {}) => { return (<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 12" width="1em" height="1em" {...props}><path stroke="currentColor" strokeWidth="2" d="m2.139 10.002 6.86-6.86 6.86 6.86"/></svg>); };


export {  SvgIcoAccordion,  SvgIcoCarouselNext,  SvgIcoCarouselPrev,  SvgIcoCheck,  SvgIcoClose,  SvgIcoEllipsisChevron,  SvgIcoIndeterminate,  SvgIcoInputReset,  SvgIcoSearchDefault,  SvgIcoSearch,  SvgIcoSelectboxArrow,  SvgIcoSortDownElement,  SvgIcoSortNormalElement,  SvgIcoSortUpElement,  SvgIcoTooltipArrow,  SvgKeyboardArrowDown2,  SvgKeyboardArrowUp2 };